# -*- coding: utf-8 -*-
"""Streamlit_in_colab.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w526tHF4OlZKIHEDNnFMQQPGtv7Exhk3
"""

!pip install streamlit pandas altair matplotlib seaborn
from google.colab import output
import os, time, requests, subprocess, sys, textwrap, pathlib

# Commented out IPython magic to ensure Python compatibility.
# # in Colab we can create new files and write in them with using %%writefile command
# 
# %%writefile app.py
# import streamlit as st, pandas as pd
# st.set_page_config(layout="wide")
# st.title("Hello from AAUBS 2025/26 SDS class üëã")
# st.write("This is running inside Google Colab (iframe). As you can see, it is a bit lame...")
# 
# st.write("There are also other ways of starting it but its functionality depends on your computer's settings...")
# st.bar_chart(pd.DataFrame({"x":[1,2,3,4], "y":[3,1,4,2]}).set_index("x"))
#

PORT = 8502  # change to a new number if needed
os.makedirs(".streamlit", exist_ok=True)
open(".streamlit/config.toml","w").write(textwrap.dedent(f"""
[server]
headless = true
port = {PORT}
address = "0.0.0.0"
enableCORS = false
enableXsrfProtection = false

[browser]
gatherUsageStats = false
"""))
print("Wrote .streamlit/config.toml")

# Stop any previous Streamlit process
!pkill -f "streamlit run" || true

# Start Streamlit in the background and log to file
proc = subprocess.Popen(
    ["streamlit", "run", "app.py"],
    stdout=open("streamlit.log", "w"),
    stderr=subprocess.STDOUT,
    text=True
)

# Wait until Streamlit is healthy (prevents blank/500 iframe)
health_url = f"http://127.0.0.1:{PORT}/healthz"
for i in range(60):  # ~30s max
    try:
        r = requests.get(health_url, timeout=0.5)
        if r.status_code == 200:
            print(f"‚úÖ Streamlit is up on port {PORT}")
            break
    except Exception:
        pass
    time.sleep(0.5)
else:
    print("‚ö†Ô∏è Streamlit did not become healthy in time. Log tail:")
    try:
        print("\n".join(open("streamlit.log").read().splitlines()[-80:]))
    except Exception as e:
        print(f"(couldn't read log): {e}")

# If it ever shows blank again, re-run just this cell.
output.serve_kernel_port_as_iframe(PORT, height=800)
